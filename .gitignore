# Local .terraform directories
.terraform/

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Ignore transient lock info files created by terraform apply
.terraform.tfstate.lock.info

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

## Ignore Visual Studio temporary files, build results, and cache
src/SADAB.API/obj/
src/SADAB.Shared/bin/



# User-specific files
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates

# Build results
[Bb]in/
[Oo]bj/
[Ll]og/
[Ll]ogs/
Debug/
Release/
x64/
x86/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]uild/

# Visual Studio cache
.vs/

# Test results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# Package directories
packages/
*.nupkg
*.snupkg

# Others
*.dbmdl
*.bak
*.log
*.tlog
*.pdb
*.cache
*.opendb
*.VC.db
*.VC.VC.opendb
*.dll
*.db
*.db-shm
*.db-wal

# Auto-generated files
*.g.*
*.i.*
*.sbr

# Publish outputs
publish/
Debug/
